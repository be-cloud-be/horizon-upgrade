version: "2.4"

services:
  odoo_proxy:
    image: tecnativa/whitelist
    depends_on:
      - odoo
    networks: &public
      default:
      public:
    ports:
      - "127.0.0.1:11899:6899"
      - "127.0.0.1:11069:8069"
    environment:
      PORT: "6899 8069"
      TARGET: odoo

  odoo:
    extends:
      file: common.yaml
      service: odoo
    build:
      args:
        # To aggregate in development, use `setup-devel.yaml`
        AGGREGATE: "false"
        # Export these variables to own files created by odoo in your filesystem
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
        # No need for this in development
        PIP_INSTALL_ODOO: "false"
        CLEAN: "false"
        COMPILE: "false"
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-devel}"
      LIST_DB: "true"
      DEBUGPY_ENABLE: "${DOODBA_DEBUGPY_ENABLE:-0}"
      PGDATABASE: &dbname "odoo_v15"
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONOPTIMIZE: ""
      PYTHONPATH: /opt/odoo/custom/src/odoo
      SMTP_PORT: "1025"
      WDB_WEB_PORT: "11984"
      # To avoid installing demo data export DOODBA_WITHOUT_DEMO=all
      WITHOUT_DEMO: "${DOODBA_WITHOUT_DEMO-false}"
      # ODOO_DB_RESTORE: "1"
      ODOO_DB_COPY: "1"
      ODOO_FILESTORE_COPY: "1"
    volumes:
      - ./odoo/custom:/opt/odoo/custom:ro,z
      - ./odoo/auto:/opt/odoo/auto:rw,z
    depends_on:
      - db
    command:
      - click-odoo-update
      
  db:
    extends:
      file: common.yaml
      service: db
    environment:
      POSTGRES_DB: *dbname
      POSTGRES_PASSWORD: odoopassword

volumes:
  old_filestore:
      driver: local
      driver_opts:
        o: bind
        type: none
        device: /home/ubuntu/odoo_v14_data
  filestore:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/ubuntu/odoo_v15_data
  db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/ubuntu/postgresql_data

networks:
  default:
    internal: true
  public: